<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Detalles del Producto</title>
  <link rel="stylesheet" href="/styles.css">
</head>
<body>
  <header>

    <div class="header-container">
      <h1>Detalle del producto: {{product.title}}</h1>
            <div class="header-icons">
                <a href="/login"><i class="fas fa-user"></i></a>
                <a href="/api/cart"><i class="fas fa-shopping-cart"></i></a>
            </div>
        </div>
  </header>

  <main>
    <div class="product-detail-container">
      <img src="{{product.image}}" alt="{{product.title}}" class="product-image-detail">
      <div class="product-info">
        <p><strong>Precio:</strong> ${{product.price}}</p>
        <p><strong>Categoría:</strong> {{product.category}}</p>
        <p><strong>Descripción:</strong> {{product.description}}</p>
        <p><strong>Stock:</strong> <span id="stock">{{product.stock}}</span> unidades disponibles</p>
        <button class="add-to-cart-btn" data-product-id="{{product._id}}">Agregar al carrito</button>
      </div>
    </div>
  </main>

  <footer>
    <a href="/">Volver a la tienda</a>
  </footer>
  <script src="/socket.io/socket.io.js"></script>
  <script>
  const socket = io();

  socket.on("actualizar-carrito", (data) => {
    const stockElement = document.getElementById('stock');

    if (data.productId === "{{product._id}}") {
      stockElement.textContent = data.newStock; // Actualiza el stock en la vista
    }
  });

  const isLoggedIn = {{isLoggedIn}};

  document.addEventListener('DOMContentLoaded', () => {
    const button = document.querySelector('.add-to-cart-btn');

    button.addEventListener('click', async (event) => {
      const productId = event.target.dataset.productId;

      if (!isLoggedIn) {
        alert('Debe loguearse para agregar producto al carrito');
        return;
      }

      const response = await fetch(`/api/cart/add/${productId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        const responseData = await response.json();
        alert('Producto agregado al carrito');

        // Emitir evento a través de Socket.IO para actualizar el stock
        socket.emit('producto-agregado', { productId, newStock: responseData.newStock });
      } else {
        alert('Error al agregar el producto al carrito.');
      }
    });
  });
</script>
</body>
</html>
</script>
